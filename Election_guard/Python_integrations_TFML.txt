# fraud_detection_ml.py
import tensorflow as tf
import numpy as np
from flask import Flask, request, jsonify
from web3 import Web3

app = Flask(__name__)

# Load trained model
model = tf.keras.models.load_model('election_fraud_model.h5')

class ElectionFraudDetector:
    def __init__(self):
        self.w3 = Web3(Web3.HTTPProvider('http://localhost:8545'))
        
    def preprocess_data(self, election_data):
        """Prepare features for ML model"""
        features = []
        for region in election_data:
            turnout = region['actualVotes'] / region['registeredVoters']
            variance = np.std(region['votes']) / np.mean(region['votes'])
            features.append([turnout, variance, len(region['votes'])])
        return np.array(features)